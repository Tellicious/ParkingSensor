name: Test build

on:
  pull_request:
        types: [opened, reopened]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Install dependencies
      run: |
        sudo apt install -y \
            build-essential \
            gcc-arm-none-eabi \
            binutils-arm-none-eabi \
            cmake ninja-build \
            git
    
    - name: Wait for CMSIS update to run
      if: ${{ github.event_name == 'pull_request' }}
      uses: lewagon/wait-on-check-action@v1.3.4
      with:
        ref: ${{ env.BRANCH_NAME }}
        check-name: 'CMSISUpdate'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH_NAME }}
        submodules: 'recursive'
        fetch-depth: 0
        token: ${{ secrets.PAT }}
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${{github.workspace}}/cmake/gcc-arm-none-eabi.cmake -S ${{github.workspace}} -B ${{github.workspace}}/build -G Ninja
    
    - name: Build
      # Build your program with the given configuration
      #run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 10
      run: cmake --build ${{github.workspace}}/build -j 10  

